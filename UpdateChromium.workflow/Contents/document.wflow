<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>246</string>
	<key>AMApplicationVersion</key>
	<string>2.1</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.1</string>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/sh

# configurable options:
removeafter=false
downloads="$HOME/Downloads"
installdir="/Applications"

notify=`which growl` # GrowlScript from git@github.com:minrk/GrowlScript.git
test -z "$notify" &amp;&amp; notify='echo'

# end configurable options (probably)

root="http://build.chromium.org/buildbot/snapshots/chromium-rel-mac"
basename="chrome-mac"
zipfile="$basename.zip"
srcfile="$basename/Chromium.app"



cd $downloads || exit -1
echo "checking latest version: \\c"
version=`curl -s $root/LATEST`
echo $version
target="$basename-r$version.zip"

# echo $version
if [ ! -f $target ]; then
    $notify "downloading Chromium-r$version"
    curl "$root/$version/$zipfile" -o "$target"  || exit -1
else
    msg="Chromium already up to date at r$version"
    # There should not be a Chromium.app unless previous update failed:
    if [ ! -e $basename/Chromium.app ]; then
        $notify "Installed $msg"
        exit 0
    else # try installing
        $notify "Downloaded $msg, preparing to install..."
    fi
fi

echo "unzipping..."
unzip -qu $target

echo "installing..."
wasrunning=`osascript -e 'tell application "System Events" to (name of processes) contains "Chromium"'`
if [ $wasrunning = 'true' ]; then
    osascript -e 'tell application "Chromium" to activate' || ($notify "Chromium Update Cancelled" &amp;&amp; kill $$)
    osascript -e 'tell application "Chromium" to display dialog "Restart Chromium for update?"' &gt;/dev/null 2&gt;/dev/null || ($notify "Chromium Update Cancelled" &amp;&amp; kill $$)
    osascript -e 'tell application "Chromium" to quit' || ($notify "Chromium Update Cancelled" &amp;&amp; kill $$)
    stillrunning=`osascript -e 'tell application "System Events" to (name of processes) contains "Chromium"'`
    while [ $stillrunning = 'true' ]; do
        sleep 0.25
        echo "waiting for Chromium to exit..."
        stillrunning=`osascript -e 'tell application "System Events" to (name of processes) contains "Chromium"'`
        echo $stillrunning
    done
fi
osascript -e "tell application \"Finder\" to move (\"$downloads/$srcfile\" as POSIX file) to folder (\"$installdir\" as POSIX file) with replacing"&gt;/dev/null || (echo "install may have failed" &amp;&amp; kill $$)

echo "cleaning up..."
mv $target $target.t
for zip in $basename-r*.zip; do
    if [ $zip != "$basename-r*.zip" ]; then
        osascript -e "tell application \"Finder\" to move (\"$downloads/$zip\" as POSIX file) to trash"&gt;/dev/null
    fi
done
mv $target.t $target

if [ $removeafter = 'true' ]; then
    rm -rf $basename
    rm $target
fi
$notify "Chromium updated to r$version"

if [ $wasrunning = 'true' ]; then # restart Chromium
    osascript -e 'tell application "Chromium" to activate'
fi
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/bin/sh</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>Application</key>
				<array>
					<string>Automator</string>
				</array>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>0F9B055F-8B6A-40F2-BE66-87A1FB0D3A06</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>6706C0AB-EC95-445C-8E7A-26A3DF19B455</string>
				<key>UUID</key>
				<string>841BC528-0F5C-43FB-A0FF-67C4FCE28B71</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>309.500000:455.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>state</key>
	<dict>
		<key>AMLogTabViewSelectedIndex</key>
		<integer>0</integer>
		<key>libraryState</key>
		<dict>
			<key>actionsMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 381.000000, 515.000000, NO</string>
					<string>0.000000, 516.000000, 381.000000, 140.000000, NO</string>
				</array>
			</dict>
			<key>actionsMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 515.000000, NO</string>
					<string>164.000000, 0.000000, 217.000000, 515.000000, NO</string>
				</array>
			</dict>
			<key>variablesMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 381.000000, 555.000000, NO</string>
					<string>0.000000, 556.000000, 381.000000, 100.000000, NO</string>
				</array>
			</dict>
			<key>variablesMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 555.000000, NO</string>
					<string>164.000000, 0.000000, 217.000000, 555.000000, NO</string>
				</array>
			</dict>
		</dict>
		<key>majorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>0.0</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 381.000000, 701.000000, NO</string>
				<string>382.000000, 0.000000, 619.000000, 701.000000, NO</string>
			</array>
		</dict>
		<key>minorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>0.0</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 619.000000, 510.000000, NO</string>
				<string>0.000000, 520.000000, 619.000000, 162.000000, NO</string>
			</array>
		</dict>
		<key>windowFrame</key>
		<string>{{257, 108}, {1000, 778}}</string>
		<key>workflowViewScrollPosition</key>
		<string>{{0, 0}, {619, 510}}</string>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
